name: ci
on: [push, pull_request]
jobs:
  # skip ci if the last commit contains the appropriate tag
  skip-commit:
    runs-on: ubuntu-latest
    steps:
      - if: "contains(github.event.head_commit.message, '[skip-ci]')
          || contains(github.event.head_commit.message, '[skip ci]')
          || contains(github.event.head_commit.message, '[ci-skip]')
          || contains(github.event.head_commit.message, '[ci skip]')"
        run: exit 78

  # verify that project builds (via "check" via "clippy") on linux
  linux-cargo-clippy:
    env:
      RUSTC_WRAPPER: sccache
    needs: [skip-commit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: |
          rustup show > .rustup.lock
          rustup toolchain list | cut -d " " -f1 | xargs -I {} rustup uninstall {}
      - uses: actions/cache@v1
        with:
          path: ~/.rustup
          key: ${{ runner.OS }}-rustup-${{ hashFiles('.rustup.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: |
          rustup set profile minimal
          rustup toolchain install stable --component clippy
      - uses: actions-rs/cargo@v1
        with:
          command: update
      - uses: actions/cache@v1
        with:
          path: ~/.cache/sccache
          key: ${{ runner.OS }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.OS }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.OS }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.OS }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: curl -L https://github.com/mozilla/sccache/releases/download/0.2.12/sccache-0.2.12-x86_64-unknown-linux-musl.tar.gz | tar zxf - --overwrite --strip-components=1 -C ~/.cargo/bin
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings

  # build the documentation
  linux-cargo-docs:
    env:
      RUSTC_WRAPPER: sccache
    needs: [skip-commit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: |
          rustup show > .rustup.lock
          rustup toolchain list | cut -d " " -f1 | xargs -I {} rustup uninstall {}
      - uses: actions/cache@v1
        with:
          path: ~/.rustup
          key: ${{ runner.OS }}-rustup-${{ hashFiles('.rustup.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: |
          rustup set profile minimal
          rustup toolchain install stable
      - uses: actions-rs/cargo@v1
        with:
          command: update
      - uses: actions/cache@v1
        with:
          path: ~/.cache/sccache
          key: ${{ runner.OS }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.OS }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.OS }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.OS }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: curl -L https://github.com/mozilla/sccache/releases/download/0.2.12/sccache-0.2.12-x86_64-unknown-linux-musl.tar.gz | tar zxf - --overwrite --strip-components=1 -C ~/.cargo/bin
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --all --all-features
      - run: cp .ci/assets/docs/index.html target/doc/index.html

  # verify that code is formatted
  linux-cargo-fmt:
    env:
      RUSTC_WRAPPER: sccache
    needs: [skip-commit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  # verify that tests pass on linux
  linux-cargo-test:
    env:
      RUSTC_WRAPPER: sccache
    needs: [skip-commit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - run: |
          rustup show > .rustup.lock
          rustup toolchain list | cut -d " " -f1 | xargs -I {} rustup uninstall {}
      - uses: actions/cache@v1
        with:
          path: ~/.rustup
          key: ${{ runner.OS }}-rustup-${{ hashFiles('.rustup.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - run: |
          rustup set profile minimal
          rustup toolchain install stable
      - uses: actions-rs/cargo@v1
        with:
          command: update
      - uses: actions/cache@v1
        with:
          path: ~/.cache/sccache
          key: ${{ runner.OS }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.OS }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.OS }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.OS }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - run: curl -L      https://github.com/mozilla/sccache/releases/download/0.2.12/sccache-0.2.12-x86_64-unknown-linux-musl.tar.gz | tar zxf - --overwrite --strip-components=1 -C ~/.cargo/bin
      - run: curl -L https://github.com/rustwasm/wasm-pack/releases/download/v0.8.1/wasm-pack-v0.8.1-x86_64-unknown-linux-musl.tar.gz | tar zxf - --overwrite --strip-components=1 -C ~/.cargo/bin
      - uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.OS }}-build-${{ env.cache-name }}-
            ${{ runner.OS }}-build-
            ${{ runner.OS }}-
      - uses: actions/setup-node@v1
        with:
          node-version: '13.x'
      - run: npm ci
      - run: wasm-pack test --node -- --all
